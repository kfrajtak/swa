<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.springframework.samples.petclinic.vets</groupId>
    <artifactId>spring-petclinic-vets-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-petclinic-vets-service</name>
    <description>Spring PetClinic Vets Service</description>
    <properties>
        <java.version>11</java.version>
        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
        <openapi-generator-maven-plugin.version>5.4.0</openapi-generator-maven-plugin.version>
        <project-base-package>${project.groupId}.service</project-base-package>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.2</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.6.4</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.6.4</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>3.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>



    <profiles>
        <profile>
            <id>integration-tests</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <includes>
                                    <include>**/*IntegrationTest.java</include>
                                </includes>
                                <systemPropertyVariables>
                                    <x>xyz</x>
                                </systemPropertyVariables>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>0.39.0</version>
                            <configuration>
                                <images>
                                    <image>
                                        <alias>vets-service</alias>
                                        <name>swa/vets-service:${project.version}</name>
                                        <build>
                                            <from>openjdk:11-jre-slim-buster</from>
                                            <!--assembly>
                                                <descriptor>docker-assembly.xml</descriptor>
                                            </assembly-->
                                            <cmd>
                                                <shell>java -jar /maven/service.jar</shell>
                                            </cmd>
                                        </build>
                                        <run>
                                            <ports>
                                                <port>tomcat.port:8080</port>
                                            </ports>
                                            <wait>
                                                <http>
                                                    <url>http://localhost:8080/home</url>
                                                </http>
                                                <time>10000</time>
                                            </wait>
                                            <links>
                                                <link>database:db</link>
                                            </links>
                                        </run>

                                        <copy>
                                            <entries>
                                                <entry>
                                                    <containerPath>/etc/hosts</containerPath>
                                                    <hostDirectory>${project.build.directory}</hostDirectory>
                                                </entry>
                                            </entries>
                                        </copy>
                                    </image>

                                    <image>
                                        <alias>database</alias>
                                        <name>mysql:8</name>
                                        <run>
                                            <wait>
                                                <log>mysqld: ready for connections</log>
                                                <time>20000</time>
                                            </wait>
                                        </run>
                                    </image>
                                </images>
                            </configuration>
                            <!-- Connect start/stop to pre- and
                                 post-integration-test phase, respectively if you want to start
                                 your docker containers during integration tests -->
                            <executions>
                                <execution>
                                    <id>start</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <!-- "build" should be used to create the images with the artifact -->
                                        <goal>build</goal>
                                        <goal>start</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>stop</id>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>stop</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.6.3</version>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>${project-base-package}.api</apiPackage>
                            <modelPackage>${project-base-package}.api.model</modelPackage>
                            <invokerPackage>${project-base-package}</invokerPackage>
                            <skipValidateSpec>false</skipValidateSpec>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <strictSpec>true</strictSpec>
                            <generateModelDocumentation>true</generateModelDocumentation>
                            <configOptions>
                                <delegatePattern>true</delegatePattern>
                                <configPackage>${project-base-package}</configPackage>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source> <!-- depending on your project -->
                    <target>1.8</target> <!-- depending on your project -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <!-- other annotation processors -->
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
